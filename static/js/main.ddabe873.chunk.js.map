{"version":3,"sources":["App.js","index.js"],"names":["RandomIndexQuote","_ref","jsonData","index","setIndex","useState","theme","setTheme","useEffect","document","body","className","classList","add","React","createElement","id","quote","author","onClick","Math","floor","random","length","toggleTheme","themes","nextThemeIndex","indexOf","href","target","rel","App","setJsonData","axios","get","then","response","fileKeys","Object","keys","data","files","fileContent","content","JSON","parse","console","error","catch","message","ReactDOM","render","StrictMode","getElementById"],"mappings":"wOAIA,MAAMA,EAAmBC,IAAkB,IAAjBC,SAAEA,GAAUD,EACpC,MAAOE,EAAOC,GAAYC,mBAAS,IAC5BC,EAAOC,GAAYF,mBAAS,aAgBnC,OALAG,oBAAU,KACRC,SAASC,KAAKC,UAAY,GAC1BF,SAASC,KAAKE,UAAUC,IAAIP,IAC3B,CAACA,IAGFQ,IAAAC,cAAA,OAAKC,GAAG,YAAYL,UAAU,SAC5BG,IAAAC,cAAA,MAAIC,GAAG,QAAQd,EAASC,GAAOc,OAC/BH,IAAAC,cAAA,MAAIC,GAAG,UAAUd,EAASC,GAAOe,QACjCJ,IAAAC,cAAA,UAAQC,GAAG,YAAYG,QAASA,KAlBVf,EAASgB,KAAKC,MAAMD,KAAKE,SAAWpB,EAASqB,SAEnDC,MAClB,MAAMC,EAAS,CAAC,YAAa,aAAc,YAErCC,GADoBD,EAAOE,QAAQrB,GACG,GAAKmB,EAAOF,OACxDhB,EAASkB,EAAOC,KAYyCF,KAAkB,aACzEV,IAAAC,cAAA,KAAGC,GAAG,cAAcY,+CAAgD1B,EAASC,GAAOc,YAAYf,EAASC,GAAOe,SAAUW,OAAO,SAASC,IAAI,uBAAsB,WAiC3JC,MA5Bf,WACE,MAAO7B,EAAU8B,GAAe3B,mBAAS,IAoBzC,OAlBAG,oBAAU,KAERyB,IAAMC,IADM,iEAETC,KAAKC,IACJ,MAAMC,EAAWC,OAAOC,KAAKH,EAASI,KAAKC,OAC3C,GAAIJ,EAASd,OAAS,EAAG,CACvB,MAAMmB,EAAcN,EAASI,KAAKC,MAAMJ,EAAS,IAAIM,QAC/CzC,EAAW0C,KAAKC,MAAMH,GAC5BV,EAAY9B,QAEZ4C,QAAQC,MAAM,iCAGjBC,MAAMD,IACLD,QAAQC,MAAM,gDAAiDA,EAAME,YAExE,IAGDnC,IAAAC,cAAA,WACGb,EAASqB,OAAS,EAAIT,IAAAC,cAACf,EAAgB,CAACE,SAAUA,IAAeY,IAAAC,cAAA,SAAG,gBClD3EmC,IAASC,OACPrC,IAAAC,cAACD,IAAMsC,WAAU,KACftC,IAAAC,cAACgB,EAAG,OAENtB,SAAS4C,eAAe","file":"static/js/main.ddabe873.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nconst RandomIndexQuote = ({ jsonData }) => {\n  const [index, setIndex] = useState(0);\n  const [theme, setTheme] = useState('dark-blue');\n\n  const randomIndex = () => setIndex(Math.floor(Math.random() * jsonData.length));\n\n  const toggleTheme = () => {\n    const themes = ['dark-blue', 'dark-green', 'dark-red'];\n    const currentThemeIndex = themes.indexOf(theme);\n    const nextThemeIndex = (currentThemeIndex + 1) % themes.length;\n    setTheme(themes[nextThemeIndex]);\n  };\n\n  useEffect(() => {\n    document.body.className = '';\n    document.body.classList.add(theme);\n  }, [theme]);\n\n  return (\n    <div id=\"quote-box\" className=\"quote\">\n      <h1 id=\"text\">{jsonData[index].quote}</h1>\n      <h2 id=\"author\">{jsonData[index].author}</h2>\n      <button id=\"new-quote\" onClick={() => { randomIndex(); toggleTheme(); }}>Randomize</button>\n      <a id=\"tweet-quote\" href={`https://twitter.com/intent/tweet?text=\"${jsonData[index].quote}\" - ${jsonData[index].author}`} target=\"_blank\" rel=\"noopener noreferrer\">Tweet</a>\n    </div>\n  );\n};\n\nfunction App() {\n  const [jsonData, setJsonData] = useState([]);\n\n  useEffect(() => {\n    const url = 'https://api.github.com/gists/c026b4d87dee807673166b62eac912e0';\n    axios.get(url)\n      .then(response => {\n        const fileKeys = Object.keys(response.data.files);\n        if (fileKeys.length > 0) {\n          const fileContent = response.data.files[fileKeys[0]].content;\n          const jsonData = JSON.parse(fileContent);\n          setJsonData(jsonData);\n        } else {\n          console.error('No files found in the Gist.');\n        }\n      })\n      .catch(error => {\n        console.error('There was a problem with the fetch operation:', error.message);\n      });\n  }, []);\n\n  return (\n    <div>\n      {jsonData.length > 0 ? <RandomIndexQuote jsonData={jsonData} /> : <p>Loading...</p>}\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}